version: '3.8'

services:
  # Main API server
  api:
    build:
      context: ../../backend/api
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://jarvis:jarvis123@db:5432/jarvis_dev
      - TEST_DATABASE_URL=postgresql://jarvis:jarvis123@db:5432/jarvis_test
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev-jwt-secret-change-in-production
      - JWT_REFRESH_SECRET=dev-refresh-secret-change-in-production
      - AI_SERVICE_URL=http://ai-service:8000
      - RESEARCH_ENGINE_URL=http://research-engine:3001
    volumes:
      - ../../backend/api:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
    networks:
      - jarvis-network

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=jarvis_dev
      - POSTGRES_USER=jarvis
      - POSTGRES_PASSWORD=jarvis123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ../../database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - jarvis-network

  # Test database
  db-test:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=jarvis_test
      - POSTGRES_USER=jarvis
      - POSTGRES_PASSWORD=jarvis123
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
      - ../../database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - jarvis-network
    profiles:
      - testing

  # Redis cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - jarvis-network

  # AI service (Python/FastAPI)
  ai-service:
    build:
      context: ../../backend/ai-service
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://jarvis:jarvis123@db:5432/jarvis_dev
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ../../backend/ai-service:/app
    depends_on:
      - db
      - redis
    networks:
      - jarvis-network
    profiles:
      - full

  # Research engine
  research-engine:
    build:
      context: ../../backend/research-engine
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://jarvis:jarvis123@db:5432/jarvis_dev
      - REDIS_URL=redis://redis:6379
      - AI_SERVICE_URL=http://ai-service:8000
    volumes:
      - ../../backend/research-engine:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
      - ai-service
    networks:
      - jarvis-network
    profiles:
      - full

  # Database admin interface
  adminer:
    image: adminer:4.8.1
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db
    depends_on:
      - db
    networks:
      - jarvis-network
    profiles:
      - admin

  # Redis admin interface
  redis-commander:
    image: rediscommander/redis-commander:latest
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    networks:
      - jarvis-network
    profiles:
      - admin

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:

networks:
  jarvis-network:
    driver: bridge